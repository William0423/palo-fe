/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.baidu.palo.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2018-05-01")
public class TMasterDdlRequest implements org.apache.thrift.TBase<TMasterDdlRequest, TMasterDdlRequest._Fields>, java.io.Serializable, Cloneable, Comparable<TMasterDdlRequest> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TMasterDdlRequest");

  private static final org.apache.thrift.protocol.TField PROTOCOL_VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("protocol_version", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField DDL_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("ddl_type", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField CREATE_DB_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("create_db_params", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField DROP_DB_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("drop_db_params", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField DROP_TABLE_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("drop_table_params", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField LOAD_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("load_params", org.apache.thrift.protocol.TType.STRUCT, (short)7);
  private static final org.apache.thrift.protocol.TField CANCEL_LOAD_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("cancel_load_params", org.apache.thrift.protocol.TType.STRUCT, (short)8);
  private static final org.apache.thrift.protocol.TField CREATE_USER_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("create_user_params", org.apache.thrift.protocol.TType.STRUCT, (short)9);
  private static final org.apache.thrift.protocol.TField DROP_USER_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("drop_user_params", org.apache.thrift.protocol.TType.STRUCT, (short)10);
  private static final org.apache.thrift.protocol.TField CREATE_ROLLUP_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("create_rollup_params", org.apache.thrift.protocol.TType.STRUCT, (short)11);
  private static final org.apache.thrift.protocol.TField DROP_ROLLUP_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("drop_rollup_params", org.apache.thrift.protocol.TType.STRUCT, (short)12);
  private static final org.apache.thrift.protocol.TField CREATE_FUNCTION_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("create_function_params", org.apache.thrift.protocol.TType.STRUCT, (short)13);
  private static final org.apache.thrift.protocol.TField DROP_FUNCTION_PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("drop_function_params", org.apache.thrift.protocol.TType.STRUCT, (short)14);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TMasterDdlRequestStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TMasterDdlRequestTupleSchemeFactory());
  }

  /**
   * 
   * @see TPaloInternalServiceVersion
   */
  public TPaloInternalServiceVersion protocol_version; // required
  /**
   * 
   * @see TCommonDdlType
   */
  public TCommonDdlType ddl_type; // required
  public TCreateDbParams create_db_params; // optional
  public TDropDbParams drop_db_params; // optional
  public TDropTableParams drop_table_params; // optional
  public TLoadParams load_params; // optional
  public TCancelLoadParams cancel_load_params; // optional
  public TCreateUserParams create_user_params; // optional
  public TDropUserParams drop_user_params; // optional
  public TCreateRollupParams create_rollup_params; // optional
  public TDropRollupParams drop_rollup_params; // optional
  public TCreateFunctionParams create_function_params; // optional
  public TDropFunctionParams drop_function_params; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see TPaloInternalServiceVersion
     */
    PROTOCOL_VERSION((short)1, "protocol_version"),
    /**
     * 
     * @see TCommonDdlType
     */
    DDL_TYPE((short)2, "ddl_type"),
    CREATE_DB_PARAMS((short)3, "create_db_params"),
    DROP_DB_PARAMS((short)4, "drop_db_params"),
    DROP_TABLE_PARAMS((short)6, "drop_table_params"),
    LOAD_PARAMS((short)7, "load_params"),
    CANCEL_LOAD_PARAMS((short)8, "cancel_load_params"),
    CREATE_USER_PARAMS((short)9, "create_user_params"),
    DROP_USER_PARAMS((short)10, "drop_user_params"),
    CREATE_ROLLUP_PARAMS((short)11, "create_rollup_params"),
    DROP_ROLLUP_PARAMS((short)12, "drop_rollup_params"),
    CREATE_FUNCTION_PARAMS((short)13, "create_function_params"),
    DROP_FUNCTION_PARAMS((short)14, "drop_function_params");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PROTOCOL_VERSION
          return PROTOCOL_VERSION;
        case 2: // DDL_TYPE
          return DDL_TYPE;
        case 3: // CREATE_DB_PARAMS
          return CREATE_DB_PARAMS;
        case 4: // DROP_DB_PARAMS
          return DROP_DB_PARAMS;
        case 6: // DROP_TABLE_PARAMS
          return DROP_TABLE_PARAMS;
        case 7: // LOAD_PARAMS
          return LOAD_PARAMS;
        case 8: // CANCEL_LOAD_PARAMS
          return CANCEL_LOAD_PARAMS;
        case 9: // CREATE_USER_PARAMS
          return CREATE_USER_PARAMS;
        case 10: // DROP_USER_PARAMS
          return DROP_USER_PARAMS;
        case 11: // CREATE_ROLLUP_PARAMS
          return CREATE_ROLLUP_PARAMS;
        case 12: // DROP_ROLLUP_PARAMS
          return DROP_ROLLUP_PARAMS;
        case 13: // CREATE_FUNCTION_PARAMS
          return CREATE_FUNCTION_PARAMS;
        case 14: // DROP_FUNCTION_PARAMS
          return DROP_FUNCTION_PARAMS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.CREATE_DB_PARAMS,_Fields.DROP_DB_PARAMS,_Fields.DROP_TABLE_PARAMS,_Fields.LOAD_PARAMS,_Fields.CANCEL_LOAD_PARAMS,_Fields.CREATE_USER_PARAMS,_Fields.DROP_USER_PARAMS,_Fields.CREATE_ROLLUP_PARAMS,_Fields.DROP_ROLLUP_PARAMS,_Fields.CREATE_FUNCTION_PARAMS,_Fields.DROP_FUNCTION_PARAMS};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PROTOCOL_VERSION, new org.apache.thrift.meta_data.FieldMetaData("protocol_version", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, TPaloInternalServiceVersion.class)));
    tmpMap.put(_Fields.DDL_TYPE, new org.apache.thrift.meta_data.FieldMetaData("ddl_type", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, TCommonDdlType.class)));
    tmpMap.put(_Fields.CREATE_DB_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("create_db_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TCreateDbParams.class)));
    tmpMap.put(_Fields.DROP_DB_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("drop_db_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDropDbParams.class)));
    tmpMap.put(_Fields.DROP_TABLE_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("drop_table_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDropTableParams.class)));
    tmpMap.put(_Fields.LOAD_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("load_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TLoadParams.class)));
    tmpMap.put(_Fields.CANCEL_LOAD_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("cancel_load_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TCancelLoadParams.class)));
    tmpMap.put(_Fields.CREATE_USER_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("create_user_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TCreateUserParams.class)));
    tmpMap.put(_Fields.DROP_USER_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("drop_user_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDropUserParams.class)));
    tmpMap.put(_Fields.CREATE_ROLLUP_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("create_rollup_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TCreateRollupParams.class)));
    tmpMap.put(_Fields.DROP_ROLLUP_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("drop_rollup_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDropRollupParams.class)));
    tmpMap.put(_Fields.CREATE_FUNCTION_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("create_function_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TCreateFunctionParams.class)));
    tmpMap.put(_Fields.DROP_FUNCTION_PARAMS, new org.apache.thrift.meta_data.FieldMetaData("drop_function_params", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TDropFunctionParams.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TMasterDdlRequest.class, metaDataMap);
  }

  public TMasterDdlRequest() {
  }

  public TMasterDdlRequest(
    TPaloInternalServiceVersion protocol_version,
    TCommonDdlType ddl_type)
  {
    this();
    this.protocol_version = protocol_version;
    this.ddl_type = ddl_type;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TMasterDdlRequest(TMasterDdlRequest other) {
    if (other.isSetProtocol_version()) {
      this.protocol_version = other.protocol_version;
    }
    if (other.isSetDdl_type()) {
      this.ddl_type = other.ddl_type;
    }
    if (other.isSetCreate_db_params()) {
      this.create_db_params = new TCreateDbParams(other.create_db_params);
    }
    if (other.isSetDrop_db_params()) {
      this.drop_db_params = new TDropDbParams(other.drop_db_params);
    }
    if (other.isSetDrop_table_params()) {
      this.drop_table_params = new TDropTableParams(other.drop_table_params);
    }
    if (other.isSetLoad_params()) {
      this.load_params = new TLoadParams(other.load_params);
    }
    if (other.isSetCancel_load_params()) {
      this.cancel_load_params = new TCancelLoadParams(other.cancel_load_params);
    }
    if (other.isSetCreate_user_params()) {
      this.create_user_params = new TCreateUserParams(other.create_user_params);
    }
    if (other.isSetDrop_user_params()) {
      this.drop_user_params = new TDropUserParams(other.drop_user_params);
    }
    if (other.isSetCreate_rollup_params()) {
      this.create_rollup_params = new TCreateRollupParams(other.create_rollup_params);
    }
    if (other.isSetDrop_rollup_params()) {
      this.drop_rollup_params = new TDropRollupParams(other.drop_rollup_params);
    }
    if (other.isSetCreate_function_params()) {
      this.create_function_params = new TCreateFunctionParams(other.create_function_params);
    }
    if (other.isSetDrop_function_params()) {
      this.drop_function_params = new TDropFunctionParams(other.drop_function_params);
    }
  }

  public TMasterDdlRequest deepCopy() {
    return new TMasterDdlRequest(this);
  }

  @Override
  public void clear() {
    this.protocol_version = null;
    this.ddl_type = null;
    this.create_db_params = null;
    this.drop_db_params = null;
    this.drop_table_params = null;
    this.load_params = null;
    this.cancel_load_params = null;
    this.create_user_params = null;
    this.drop_user_params = null;
    this.create_rollup_params = null;
    this.drop_rollup_params = null;
    this.create_function_params = null;
    this.drop_function_params = null;
  }

  /**
   * 
   * @see TPaloInternalServiceVersion
   */
  public TPaloInternalServiceVersion getProtocol_version() {
    return this.protocol_version;
  }

  /**
   * 
   * @see TPaloInternalServiceVersion
   */
  public TMasterDdlRequest setProtocol_version(TPaloInternalServiceVersion protocol_version) {
    this.protocol_version = protocol_version;
    return this;
  }

  public void unsetProtocol_version() {
    this.protocol_version = null;
  }

  /** Returns true if field protocol_version is set (has been assigned a value) and false otherwise */
  public boolean isSetProtocol_version() {
    return this.protocol_version != null;
  }

  public void setProtocol_versionIsSet(boolean value) {
    if (!value) {
      this.protocol_version = null;
    }
  }

  /**
   * 
   * @see TCommonDdlType
   */
  public TCommonDdlType getDdl_type() {
    return this.ddl_type;
  }

  /**
   * 
   * @see TCommonDdlType
   */
  public TMasterDdlRequest setDdl_type(TCommonDdlType ddl_type) {
    this.ddl_type = ddl_type;
    return this;
  }

  public void unsetDdl_type() {
    this.ddl_type = null;
  }

  /** Returns true if field ddl_type is set (has been assigned a value) and false otherwise */
  public boolean isSetDdl_type() {
    return this.ddl_type != null;
  }

  public void setDdl_typeIsSet(boolean value) {
    if (!value) {
      this.ddl_type = null;
    }
  }

  public TCreateDbParams getCreate_db_params() {
    return this.create_db_params;
  }

  public TMasterDdlRequest setCreate_db_params(TCreateDbParams create_db_params) {
    this.create_db_params = create_db_params;
    return this;
  }

  public void unsetCreate_db_params() {
    this.create_db_params = null;
  }

  /** Returns true if field create_db_params is set (has been assigned a value) and false otherwise */
  public boolean isSetCreate_db_params() {
    return this.create_db_params != null;
  }

  public void setCreate_db_paramsIsSet(boolean value) {
    if (!value) {
      this.create_db_params = null;
    }
  }

  public TDropDbParams getDrop_db_params() {
    return this.drop_db_params;
  }

  public TMasterDdlRequest setDrop_db_params(TDropDbParams drop_db_params) {
    this.drop_db_params = drop_db_params;
    return this;
  }

  public void unsetDrop_db_params() {
    this.drop_db_params = null;
  }

  /** Returns true if field drop_db_params is set (has been assigned a value) and false otherwise */
  public boolean isSetDrop_db_params() {
    return this.drop_db_params != null;
  }

  public void setDrop_db_paramsIsSet(boolean value) {
    if (!value) {
      this.drop_db_params = null;
    }
  }

  public TDropTableParams getDrop_table_params() {
    return this.drop_table_params;
  }

  public TMasterDdlRequest setDrop_table_params(TDropTableParams drop_table_params) {
    this.drop_table_params = drop_table_params;
    return this;
  }

  public void unsetDrop_table_params() {
    this.drop_table_params = null;
  }

  /** Returns true if field drop_table_params is set (has been assigned a value) and false otherwise */
  public boolean isSetDrop_table_params() {
    return this.drop_table_params != null;
  }

  public void setDrop_table_paramsIsSet(boolean value) {
    if (!value) {
      this.drop_table_params = null;
    }
  }

  public TLoadParams getLoad_params() {
    return this.load_params;
  }

  public TMasterDdlRequest setLoad_params(TLoadParams load_params) {
    this.load_params = load_params;
    return this;
  }

  public void unsetLoad_params() {
    this.load_params = null;
  }

  /** Returns true if field load_params is set (has been assigned a value) and false otherwise */
  public boolean isSetLoad_params() {
    return this.load_params != null;
  }

  public void setLoad_paramsIsSet(boolean value) {
    if (!value) {
      this.load_params = null;
    }
  }

  public TCancelLoadParams getCancel_load_params() {
    return this.cancel_load_params;
  }

  public TMasterDdlRequest setCancel_load_params(TCancelLoadParams cancel_load_params) {
    this.cancel_load_params = cancel_load_params;
    return this;
  }

  public void unsetCancel_load_params() {
    this.cancel_load_params = null;
  }

  /** Returns true if field cancel_load_params is set (has been assigned a value) and false otherwise */
  public boolean isSetCancel_load_params() {
    return this.cancel_load_params != null;
  }

  public void setCancel_load_paramsIsSet(boolean value) {
    if (!value) {
      this.cancel_load_params = null;
    }
  }

  public TCreateUserParams getCreate_user_params() {
    return this.create_user_params;
  }

  public TMasterDdlRequest setCreate_user_params(TCreateUserParams create_user_params) {
    this.create_user_params = create_user_params;
    return this;
  }

  public void unsetCreate_user_params() {
    this.create_user_params = null;
  }

  /** Returns true if field create_user_params is set (has been assigned a value) and false otherwise */
  public boolean isSetCreate_user_params() {
    return this.create_user_params != null;
  }

  public void setCreate_user_paramsIsSet(boolean value) {
    if (!value) {
      this.create_user_params = null;
    }
  }

  public TDropUserParams getDrop_user_params() {
    return this.drop_user_params;
  }

  public TMasterDdlRequest setDrop_user_params(TDropUserParams drop_user_params) {
    this.drop_user_params = drop_user_params;
    return this;
  }

  public void unsetDrop_user_params() {
    this.drop_user_params = null;
  }

  /** Returns true if field drop_user_params is set (has been assigned a value) and false otherwise */
  public boolean isSetDrop_user_params() {
    return this.drop_user_params != null;
  }

  public void setDrop_user_paramsIsSet(boolean value) {
    if (!value) {
      this.drop_user_params = null;
    }
  }

  public TCreateRollupParams getCreate_rollup_params() {
    return this.create_rollup_params;
  }

  public TMasterDdlRequest setCreate_rollup_params(TCreateRollupParams create_rollup_params) {
    this.create_rollup_params = create_rollup_params;
    return this;
  }

  public void unsetCreate_rollup_params() {
    this.create_rollup_params = null;
  }

  /** Returns true if field create_rollup_params is set (has been assigned a value) and false otherwise */
  public boolean isSetCreate_rollup_params() {
    return this.create_rollup_params != null;
  }

  public void setCreate_rollup_paramsIsSet(boolean value) {
    if (!value) {
      this.create_rollup_params = null;
    }
  }

  public TDropRollupParams getDrop_rollup_params() {
    return this.drop_rollup_params;
  }

  public TMasterDdlRequest setDrop_rollup_params(TDropRollupParams drop_rollup_params) {
    this.drop_rollup_params = drop_rollup_params;
    return this;
  }

  public void unsetDrop_rollup_params() {
    this.drop_rollup_params = null;
  }

  /** Returns true if field drop_rollup_params is set (has been assigned a value) and false otherwise */
  public boolean isSetDrop_rollup_params() {
    return this.drop_rollup_params != null;
  }

  public void setDrop_rollup_paramsIsSet(boolean value) {
    if (!value) {
      this.drop_rollup_params = null;
    }
  }

  public TCreateFunctionParams getCreate_function_params() {
    return this.create_function_params;
  }

  public TMasterDdlRequest setCreate_function_params(TCreateFunctionParams create_function_params) {
    this.create_function_params = create_function_params;
    return this;
  }

  public void unsetCreate_function_params() {
    this.create_function_params = null;
  }

  /** Returns true if field create_function_params is set (has been assigned a value) and false otherwise */
  public boolean isSetCreate_function_params() {
    return this.create_function_params != null;
  }

  public void setCreate_function_paramsIsSet(boolean value) {
    if (!value) {
      this.create_function_params = null;
    }
  }

  public TDropFunctionParams getDrop_function_params() {
    return this.drop_function_params;
  }

  public TMasterDdlRequest setDrop_function_params(TDropFunctionParams drop_function_params) {
    this.drop_function_params = drop_function_params;
    return this;
  }

  public void unsetDrop_function_params() {
    this.drop_function_params = null;
  }

  /** Returns true if field drop_function_params is set (has been assigned a value) and false otherwise */
  public boolean isSetDrop_function_params() {
    return this.drop_function_params != null;
  }

  public void setDrop_function_paramsIsSet(boolean value) {
    if (!value) {
      this.drop_function_params = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PROTOCOL_VERSION:
      if (value == null) {
        unsetProtocol_version();
      } else {
        setProtocol_version((TPaloInternalServiceVersion)value);
      }
      break;

    case DDL_TYPE:
      if (value == null) {
        unsetDdl_type();
      } else {
        setDdl_type((TCommonDdlType)value);
      }
      break;

    case CREATE_DB_PARAMS:
      if (value == null) {
        unsetCreate_db_params();
      } else {
        setCreate_db_params((TCreateDbParams)value);
      }
      break;

    case DROP_DB_PARAMS:
      if (value == null) {
        unsetDrop_db_params();
      } else {
        setDrop_db_params((TDropDbParams)value);
      }
      break;

    case DROP_TABLE_PARAMS:
      if (value == null) {
        unsetDrop_table_params();
      } else {
        setDrop_table_params((TDropTableParams)value);
      }
      break;

    case LOAD_PARAMS:
      if (value == null) {
        unsetLoad_params();
      } else {
        setLoad_params((TLoadParams)value);
      }
      break;

    case CANCEL_LOAD_PARAMS:
      if (value == null) {
        unsetCancel_load_params();
      } else {
        setCancel_load_params((TCancelLoadParams)value);
      }
      break;

    case CREATE_USER_PARAMS:
      if (value == null) {
        unsetCreate_user_params();
      } else {
        setCreate_user_params((TCreateUserParams)value);
      }
      break;

    case DROP_USER_PARAMS:
      if (value == null) {
        unsetDrop_user_params();
      } else {
        setDrop_user_params((TDropUserParams)value);
      }
      break;

    case CREATE_ROLLUP_PARAMS:
      if (value == null) {
        unsetCreate_rollup_params();
      } else {
        setCreate_rollup_params((TCreateRollupParams)value);
      }
      break;

    case DROP_ROLLUP_PARAMS:
      if (value == null) {
        unsetDrop_rollup_params();
      } else {
        setDrop_rollup_params((TDropRollupParams)value);
      }
      break;

    case CREATE_FUNCTION_PARAMS:
      if (value == null) {
        unsetCreate_function_params();
      } else {
        setCreate_function_params((TCreateFunctionParams)value);
      }
      break;

    case DROP_FUNCTION_PARAMS:
      if (value == null) {
        unsetDrop_function_params();
      } else {
        setDrop_function_params((TDropFunctionParams)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PROTOCOL_VERSION:
      return getProtocol_version();

    case DDL_TYPE:
      return getDdl_type();

    case CREATE_DB_PARAMS:
      return getCreate_db_params();

    case DROP_DB_PARAMS:
      return getDrop_db_params();

    case DROP_TABLE_PARAMS:
      return getDrop_table_params();

    case LOAD_PARAMS:
      return getLoad_params();

    case CANCEL_LOAD_PARAMS:
      return getCancel_load_params();

    case CREATE_USER_PARAMS:
      return getCreate_user_params();

    case DROP_USER_PARAMS:
      return getDrop_user_params();

    case CREATE_ROLLUP_PARAMS:
      return getCreate_rollup_params();

    case DROP_ROLLUP_PARAMS:
      return getDrop_rollup_params();

    case CREATE_FUNCTION_PARAMS:
      return getCreate_function_params();

    case DROP_FUNCTION_PARAMS:
      return getDrop_function_params();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PROTOCOL_VERSION:
      return isSetProtocol_version();
    case DDL_TYPE:
      return isSetDdl_type();
    case CREATE_DB_PARAMS:
      return isSetCreate_db_params();
    case DROP_DB_PARAMS:
      return isSetDrop_db_params();
    case DROP_TABLE_PARAMS:
      return isSetDrop_table_params();
    case LOAD_PARAMS:
      return isSetLoad_params();
    case CANCEL_LOAD_PARAMS:
      return isSetCancel_load_params();
    case CREATE_USER_PARAMS:
      return isSetCreate_user_params();
    case DROP_USER_PARAMS:
      return isSetDrop_user_params();
    case CREATE_ROLLUP_PARAMS:
      return isSetCreate_rollup_params();
    case DROP_ROLLUP_PARAMS:
      return isSetDrop_rollup_params();
    case CREATE_FUNCTION_PARAMS:
      return isSetCreate_function_params();
    case DROP_FUNCTION_PARAMS:
      return isSetDrop_function_params();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TMasterDdlRequest)
      return this.equals((TMasterDdlRequest)that);
    return false;
  }

  public boolean equals(TMasterDdlRequest that) {
    if (that == null)
      return false;

    boolean this_present_protocol_version = true && this.isSetProtocol_version();
    boolean that_present_protocol_version = true && that.isSetProtocol_version();
    if (this_present_protocol_version || that_present_protocol_version) {
      if (!(this_present_protocol_version && that_present_protocol_version))
        return false;
      if (!this.protocol_version.equals(that.protocol_version))
        return false;
    }

    boolean this_present_ddl_type = true && this.isSetDdl_type();
    boolean that_present_ddl_type = true && that.isSetDdl_type();
    if (this_present_ddl_type || that_present_ddl_type) {
      if (!(this_present_ddl_type && that_present_ddl_type))
        return false;
      if (!this.ddl_type.equals(that.ddl_type))
        return false;
    }

    boolean this_present_create_db_params = true && this.isSetCreate_db_params();
    boolean that_present_create_db_params = true && that.isSetCreate_db_params();
    if (this_present_create_db_params || that_present_create_db_params) {
      if (!(this_present_create_db_params && that_present_create_db_params))
        return false;
      if (!this.create_db_params.equals(that.create_db_params))
        return false;
    }

    boolean this_present_drop_db_params = true && this.isSetDrop_db_params();
    boolean that_present_drop_db_params = true && that.isSetDrop_db_params();
    if (this_present_drop_db_params || that_present_drop_db_params) {
      if (!(this_present_drop_db_params && that_present_drop_db_params))
        return false;
      if (!this.drop_db_params.equals(that.drop_db_params))
        return false;
    }

    boolean this_present_drop_table_params = true && this.isSetDrop_table_params();
    boolean that_present_drop_table_params = true && that.isSetDrop_table_params();
    if (this_present_drop_table_params || that_present_drop_table_params) {
      if (!(this_present_drop_table_params && that_present_drop_table_params))
        return false;
      if (!this.drop_table_params.equals(that.drop_table_params))
        return false;
    }

    boolean this_present_load_params = true && this.isSetLoad_params();
    boolean that_present_load_params = true && that.isSetLoad_params();
    if (this_present_load_params || that_present_load_params) {
      if (!(this_present_load_params && that_present_load_params))
        return false;
      if (!this.load_params.equals(that.load_params))
        return false;
    }

    boolean this_present_cancel_load_params = true && this.isSetCancel_load_params();
    boolean that_present_cancel_load_params = true && that.isSetCancel_load_params();
    if (this_present_cancel_load_params || that_present_cancel_load_params) {
      if (!(this_present_cancel_load_params && that_present_cancel_load_params))
        return false;
      if (!this.cancel_load_params.equals(that.cancel_load_params))
        return false;
    }

    boolean this_present_create_user_params = true && this.isSetCreate_user_params();
    boolean that_present_create_user_params = true && that.isSetCreate_user_params();
    if (this_present_create_user_params || that_present_create_user_params) {
      if (!(this_present_create_user_params && that_present_create_user_params))
        return false;
      if (!this.create_user_params.equals(that.create_user_params))
        return false;
    }

    boolean this_present_drop_user_params = true && this.isSetDrop_user_params();
    boolean that_present_drop_user_params = true && that.isSetDrop_user_params();
    if (this_present_drop_user_params || that_present_drop_user_params) {
      if (!(this_present_drop_user_params && that_present_drop_user_params))
        return false;
      if (!this.drop_user_params.equals(that.drop_user_params))
        return false;
    }

    boolean this_present_create_rollup_params = true && this.isSetCreate_rollup_params();
    boolean that_present_create_rollup_params = true && that.isSetCreate_rollup_params();
    if (this_present_create_rollup_params || that_present_create_rollup_params) {
      if (!(this_present_create_rollup_params && that_present_create_rollup_params))
        return false;
      if (!this.create_rollup_params.equals(that.create_rollup_params))
        return false;
    }

    boolean this_present_drop_rollup_params = true && this.isSetDrop_rollup_params();
    boolean that_present_drop_rollup_params = true && that.isSetDrop_rollup_params();
    if (this_present_drop_rollup_params || that_present_drop_rollup_params) {
      if (!(this_present_drop_rollup_params && that_present_drop_rollup_params))
        return false;
      if (!this.drop_rollup_params.equals(that.drop_rollup_params))
        return false;
    }

    boolean this_present_create_function_params = true && this.isSetCreate_function_params();
    boolean that_present_create_function_params = true && that.isSetCreate_function_params();
    if (this_present_create_function_params || that_present_create_function_params) {
      if (!(this_present_create_function_params && that_present_create_function_params))
        return false;
      if (!this.create_function_params.equals(that.create_function_params))
        return false;
    }

    boolean this_present_drop_function_params = true && this.isSetDrop_function_params();
    boolean that_present_drop_function_params = true && that.isSetDrop_function_params();
    if (this_present_drop_function_params || that_present_drop_function_params) {
      if (!(this_present_drop_function_params && that_present_drop_function_params))
        return false;
      if (!this.drop_function_params.equals(that.drop_function_params))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_protocol_version = true && (isSetProtocol_version());
    list.add(present_protocol_version);
    if (present_protocol_version)
      list.add(protocol_version.getValue());

    boolean present_ddl_type = true && (isSetDdl_type());
    list.add(present_ddl_type);
    if (present_ddl_type)
      list.add(ddl_type.getValue());

    boolean present_create_db_params = true && (isSetCreate_db_params());
    list.add(present_create_db_params);
    if (present_create_db_params)
      list.add(create_db_params);

    boolean present_drop_db_params = true && (isSetDrop_db_params());
    list.add(present_drop_db_params);
    if (present_drop_db_params)
      list.add(drop_db_params);

    boolean present_drop_table_params = true && (isSetDrop_table_params());
    list.add(present_drop_table_params);
    if (present_drop_table_params)
      list.add(drop_table_params);

    boolean present_load_params = true && (isSetLoad_params());
    list.add(present_load_params);
    if (present_load_params)
      list.add(load_params);

    boolean present_cancel_load_params = true && (isSetCancel_load_params());
    list.add(present_cancel_load_params);
    if (present_cancel_load_params)
      list.add(cancel_load_params);

    boolean present_create_user_params = true && (isSetCreate_user_params());
    list.add(present_create_user_params);
    if (present_create_user_params)
      list.add(create_user_params);

    boolean present_drop_user_params = true && (isSetDrop_user_params());
    list.add(present_drop_user_params);
    if (present_drop_user_params)
      list.add(drop_user_params);

    boolean present_create_rollup_params = true && (isSetCreate_rollup_params());
    list.add(present_create_rollup_params);
    if (present_create_rollup_params)
      list.add(create_rollup_params);

    boolean present_drop_rollup_params = true && (isSetDrop_rollup_params());
    list.add(present_drop_rollup_params);
    if (present_drop_rollup_params)
      list.add(drop_rollup_params);

    boolean present_create_function_params = true && (isSetCreate_function_params());
    list.add(present_create_function_params);
    if (present_create_function_params)
      list.add(create_function_params);

    boolean present_drop_function_params = true && (isSetDrop_function_params());
    list.add(present_drop_function_params);
    if (present_drop_function_params)
      list.add(drop_function_params);

    return list.hashCode();
  }

  @Override
  public int compareTo(TMasterDdlRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetProtocol_version()).compareTo(other.isSetProtocol_version());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProtocol_version()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.protocol_version, other.protocol_version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDdl_type()).compareTo(other.isSetDdl_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDdl_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ddl_type, other.ddl_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreate_db_params()).compareTo(other.isSetCreate_db_params());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreate_db_params()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_db_params, other.create_db_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDrop_db_params()).compareTo(other.isSetDrop_db_params());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDrop_db_params()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.drop_db_params, other.drop_db_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDrop_table_params()).compareTo(other.isSetDrop_table_params());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDrop_table_params()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.drop_table_params, other.drop_table_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoad_params()).compareTo(other.isSetLoad_params());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoad_params()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.load_params, other.load_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCancel_load_params()).compareTo(other.isSetCancel_load_params());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCancel_load_params()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cancel_load_params, other.cancel_load_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreate_user_params()).compareTo(other.isSetCreate_user_params());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreate_user_params()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_user_params, other.create_user_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDrop_user_params()).compareTo(other.isSetDrop_user_params());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDrop_user_params()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.drop_user_params, other.drop_user_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreate_rollup_params()).compareTo(other.isSetCreate_rollup_params());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreate_rollup_params()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_rollup_params, other.create_rollup_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDrop_rollup_params()).compareTo(other.isSetDrop_rollup_params());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDrop_rollup_params()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.drop_rollup_params, other.drop_rollup_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreate_function_params()).compareTo(other.isSetCreate_function_params());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreate_function_params()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.create_function_params, other.create_function_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDrop_function_params()).compareTo(other.isSetDrop_function_params());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDrop_function_params()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.drop_function_params, other.drop_function_params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TMasterDdlRequest(");
    boolean first = true;

    sb.append("protocol_version:");
    if (this.protocol_version == null) {
      sb.append("null");
    } else {
      sb.append(this.protocol_version);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ddl_type:");
    if (this.ddl_type == null) {
      sb.append("null");
    } else {
      sb.append(this.ddl_type);
    }
    first = false;
    if (isSetCreate_db_params()) {
      if (!first) sb.append(", ");
      sb.append("create_db_params:");
      if (this.create_db_params == null) {
        sb.append("null");
      } else {
        sb.append(this.create_db_params);
      }
      first = false;
    }
    if (isSetDrop_db_params()) {
      if (!first) sb.append(", ");
      sb.append("drop_db_params:");
      if (this.drop_db_params == null) {
        sb.append("null");
      } else {
        sb.append(this.drop_db_params);
      }
      first = false;
    }
    if (isSetDrop_table_params()) {
      if (!first) sb.append(", ");
      sb.append("drop_table_params:");
      if (this.drop_table_params == null) {
        sb.append("null");
      } else {
        sb.append(this.drop_table_params);
      }
      first = false;
    }
    if (isSetLoad_params()) {
      if (!first) sb.append(", ");
      sb.append("load_params:");
      if (this.load_params == null) {
        sb.append("null");
      } else {
        sb.append(this.load_params);
      }
      first = false;
    }
    if (isSetCancel_load_params()) {
      if (!first) sb.append(", ");
      sb.append("cancel_load_params:");
      if (this.cancel_load_params == null) {
        sb.append("null");
      } else {
        sb.append(this.cancel_load_params);
      }
      first = false;
    }
    if (isSetCreate_user_params()) {
      if (!first) sb.append(", ");
      sb.append("create_user_params:");
      if (this.create_user_params == null) {
        sb.append("null");
      } else {
        sb.append(this.create_user_params);
      }
      first = false;
    }
    if (isSetDrop_user_params()) {
      if (!first) sb.append(", ");
      sb.append("drop_user_params:");
      if (this.drop_user_params == null) {
        sb.append("null");
      } else {
        sb.append(this.drop_user_params);
      }
      first = false;
    }
    if (isSetCreate_rollup_params()) {
      if (!first) sb.append(", ");
      sb.append("create_rollup_params:");
      if (this.create_rollup_params == null) {
        sb.append("null");
      } else {
        sb.append(this.create_rollup_params);
      }
      first = false;
    }
    if (isSetDrop_rollup_params()) {
      if (!first) sb.append(", ");
      sb.append("drop_rollup_params:");
      if (this.drop_rollup_params == null) {
        sb.append("null");
      } else {
        sb.append(this.drop_rollup_params);
      }
      first = false;
    }
    if (isSetCreate_function_params()) {
      if (!first) sb.append(", ");
      sb.append("create_function_params:");
      if (this.create_function_params == null) {
        sb.append("null");
      } else {
        sb.append(this.create_function_params);
      }
      first = false;
    }
    if (isSetDrop_function_params()) {
      if (!first) sb.append(", ");
      sb.append("drop_function_params:");
      if (this.drop_function_params == null) {
        sb.append("null");
      } else {
        sb.append(this.drop_function_params);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (protocol_version == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'protocol_version' was not present! Struct: " + toString());
    }
    if (ddl_type == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'ddl_type' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
    if (create_db_params != null) {
      create_db_params.validate();
    }
    if (drop_db_params != null) {
      drop_db_params.validate();
    }
    if (drop_table_params != null) {
      drop_table_params.validate();
    }
    if (load_params != null) {
      load_params.validate();
    }
    if (cancel_load_params != null) {
      cancel_load_params.validate();
    }
    if (create_user_params != null) {
      create_user_params.validate();
    }
    if (drop_user_params != null) {
      drop_user_params.validate();
    }
    if (create_rollup_params != null) {
      create_rollup_params.validate();
    }
    if (drop_rollup_params != null) {
      drop_rollup_params.validate();
    }
    if (create_function_params != null) {
      create_function_params.validate();
    }
    if (drop_function_params != null) {
      drop_function_params.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TMasterDdlRequestStandardSchemeFactory implements SchemeFactory {
    public TMasterDdlRequestStandardScheme getScheme() {
      return new TMasterDdlRequestStandardScheme();
    }
  }

  private static class TMasterDdlRequestStandardScheme extends StandardScheme<TMasterDdlRequest> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TMasterDdlRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PROTOCOL_VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.protocol_version = com.baidu.palo.thrift.TPaloInternalServiceVersion.findByValue(iprot.readI32());
              struct.setProtocol_versionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DDL_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.ddl_type = com.baidu.palo.thrift.TCommonDdlType.findByValue(iprot.readI32());
              struct.setDdl_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CREATE_DB_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.create_db_params = new TCreateDbParams();
              struct.create_db_params.read(iprot);
              struct.setCreate_db_paramsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DROP_DB_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.drop_db_params = new TDropDbParams();
              struct.drop_db_params.read(iprot);
              struct.setDrop_db_paramsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // DROP_TABLE_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.drop_table_params = new TDropTableParams();
              struct.drop_table_params.read(iprot);
              struct.setDrop_table_paramsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // LOAD_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.load_params = new TLoadParams();
              struct.load_params.read(iprot);
              struct.setLoad_paramsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CANCEL_LOAD_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.cancel_load_params = new TCancelLoadParams();
              struct.cancel_load_params.read(iprot);
              struct.setCancel_load_paramsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CREATE_USER_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.create_user_params = new TCreateUserParams();
              struct.create_user_params.read(iprot);
              struct.setCreate_user_paramsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // DROP_USER_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.drop_user_params = new TDropUserParams();
              struct.drop_user_params.read(iprot);
              struct.setDrop_user_paramsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // CREATE_ROLLUP_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.create_rollup_params = new TCreateRollupParams();
              struct.create_rollup_params.read(iprot);
              struct.setCreate_rollup_paramsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // DROP_ROLLUP_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.drop_rollup_params = new TDropRollupParams();
              struct.drop_rollup_params.read(iprot);
              struct.setDrop_rollup_paramsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CREATE_FUNCTION_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.create_function_params = new TCreateFunctionParams();
              struct.create_function_params.read(iprot);
              struct.setCreate_function_paramsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // DROP_FUNCTION_PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.drop_function_params = new TDropFunctionParams();
              struct.drop_function_params.read(iprot);
              struct.setDrop_function_paramsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TMasterDdlRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.protocol_version != null) {
        oprot.writeFieldBegin(PROTOCOL_VERSION_FIELD_DESC);
        oprot.writeI32(struct.protocol_version.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.ddl_type != null) {
        oprot.writeFieldBegin(DDL_TYPE_FIELD_DESC);
        oprot.writeI32(struct.ddl_type.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.create_db_params != null) {
        if (struct.isSetCreate_db_params()) {
          oprot.writeFieldBegin(CREATE_DB_PARAMS_FIELD_DESC);
          struct.create_db_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.drop_db_params != null) {
        if (struct.isSetDrop_db_params()) {
          oprot.writeFieldBegin(DROP_DB_PARAMS_FIELD_DESC);
          struct.drop_db_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.drop_table_params != null) {
        if (struct.isSetDrop_table_params()) {
          oprot.writeFieldBegin(DROP_TABLE_PARAMS_FIELD_DESC);
          struct.drop_table_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.load_params != null) {
        if (struct.isSetLoad_params()) {
          oprot.writeFieldBegin(LOAD_PARAMS_FIELD_DESC);
          struct.load_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cancel_load_params != null) {
        if (struct.isSetCancel_load_params()) {
          oprot.writeFieldBegin(CANCEL_LOAD_PARAMS_FIELD_DESC);
          struct.cancel_load_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.create_user_params != null) {
        if (struct.isSetCreate_user_params()) {
          oprot.writeFieldBegin(CREATE_USER_PARAMS_FIELD_DESC);
          struct.create_user_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.drop_user_params != null) {
        if (struct.isSetDrop_user_params()) {
          oprot.writeFieldBegin(DROP_USER_PARAMS_FIELD_DESC);
          struct.drop_user_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.create_rollup_params != null) {
        if (struct.isSetCreate_rollup_params()) {
          oprot.writeFieldBegin(CREATE_ROLLUP_PARAMS_FIELD_DESC);
          struct.create_rollup_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.drop_rollup_params != null) {
        if (struct.isSetDrop_rollup_params()) {
          oprot.writeFieldBegin(DROP_ROLLUP_PARAMS_FIELD_DESC);
          struct.drop_rollup_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.create_function_params != null) {
        if (struct.isSetCreate_function_params()) {
          oprot.writeFieldBegin(CREATE_FUNCTION_PARAMS_FIELD_DESC);
          struct.create_function_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.drop_function_params != null) {
        if (struct.isSetDrop_function_params()) {
          oprot.writeFieldBegin(DROP_FUNCTION_PARAMS_FIELD_DESC);
          struct.drop_function_params.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TMasterDdlRequestTupleSchemeFactory implements SchemeFactory {
    public TMasterDdlRequestTupleScheme getScheme() {
      return new TMasterDdlRequestTupleScheme();
    }
  }

  private static class TMasterDdlRequestTupleScheme extends TupleScheme<TMasterDdlRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TMasterDdlRequest struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI32(struct.protocol_version.getValue());
      oprot.writeI32(struct.ddl_type.getValue());
      BitSet optionals = new BitSet();
      if (struct.isSetCreate_db_params()) {
        optionals.set(0);
      }
      if (struct.isSetDrop_db_params()) {
        optionals.set(1);
      }
      if (struct.isSetDrop_table_params()) {
        optionals.set(2);
      }
      if (struct.isSetLoad_params()) {
        optionals.set(3);
      }
      if (struct.isSetCancel_load_params()) {
        optionals.set(4);
      }
      if (struct.isSetCreate_user_params()) {
        optionals.set(5);
      }
      if (struct.isSetDrop_user_params()) {
        optionals.set(6);
      }
      if (struct.isSetCreate_rollup_params()) {
        optionals.set(7);
      }
      if (struct.isSetDrop_rollup_params()) {
        optionals.set(8);
      }
      if (struct.isSetCreate_function_params()) {
        optionals.set(9);
      }
      if (struct.isSetDrop_function_params()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetCreate_db_params()) {
        struct.create_db_params.write(oprot);
      }
      if (struct.isSetDrop_db_params()) {
        struct.drop_db_params.write(oprot);
      }
      if (struct.isSetDrop_table_params()) {
        struct.drop_table_params.write(oprot);
      }
      if (struct.isSetLoad_params()) {
        struct.load_params.write(oprot);
      }
      if (struct.isSetCancel_load_params()) {
        struct.cancel_load_params.write(oprot);
      }
      if (struct.isSetCreate_user_params()) {
        struct.create_user_params.write(oprot);
      }
      if (struct.isSetDrop_user_params()) {
        struct.drop_user_params.write(oprot);
      }
      if (struct.isSetCreate_rollup_params()) {
        struct.create_rollup_params.write(oprot);
      }
      if (struct.isSetDrop_rollup_params()) {
        struct.drop_rollup_params.write(oprot);
      }
      if (struct.isSetCreate_function_params()) {
        struct.create_function_params.write(oprot);
      }
      if (struct.isSetDrop_function_params()) {
        struct.drop_function_params.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TMasterDdlRequest struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.protocol_version = com.baidu.palo.thrift.TPaloInternalServiceVersion.findByValue(iprot.readI32());
      struct.setProtocol_versionIsSet(true);
      struct.ddl_type = com.baidu.palo.thrift.TCommonDdlType.findByValue(iprot.readI32());
      struct.setDdl_typeIsSet(true);
      BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.create_db_params = new TCreateDbParams();
        struct.create_db_params.read(iprot);
        struct.setCreate_db_paramsIsSet(true);
      }
      if (incoming.get(1)) {
        struct.drop_db_params = new TDropDbParams();
        struct.drop_db_params.read(iprot);
        struct.setDrop_db_paramsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.drop_table_params = new TDropTableParams();
        struct.drop_table_params.read(iprot);
        struct.setDrop_table_paramsIsSet(true);
      }
      if (incoming.get(3)) {
        struct.load_params = new TLoadParams();
        struct.load_params.read(iprot);
        struct.setLoad_paramsIsSet(true);
      }
      if (incoming.get(4)) {
        struct.cancel_load_params = new TCancelLoadParams();
        struct.cancel_load_params.read(iprot);
        struct.setCancel_load_paramsIsSet(true);
      }
      if (incoming.get(5)) {
        struct.create_user_params = new TCreateUserParams();
        struct.create_user_params.read(iprot);
        struct.setCreate_user_paramsIsSet(true);
      }
      if (incoming.get(6)) {
        struct.drop_user_params = new TDropUserParams();
        struct.drop_user_params.read(iprot);
        struct.setDrop_user_paramsIsSet(true);
      }
      if (incoming.get(7)) {
        struct.create_rollup_params = new TCreateRollupParams();
        struct.create_rollup_params.read(iprot);
        struct.setCreate_rollup_paramsIsSet(true);
      }
      if (incoming.get(8)) {
        struct.drop_rollup_params = new TDropRollupParams();
        struct.drop_rollup_params.read(iprot);
        struct.setDrop_rollup_paramsIsSet(true);
      }
      if (incoming.get(9)) {
        struct.create_function_params = new TCreateFunctionParams();
        struct.create_function_params.read(iprot);
        struct.setCreate_function_paramsIsSet(true);
      }
      if (incoming.get(10)) {
        struct.drop_function_params = new TDropFunctionParams();
        struct.drop_function_params.read(iprot);
        struct.setDrop_function_paramsIsSet(true);
      }
    }
  }

}

